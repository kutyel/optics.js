{"version":3,"file":"optic.modern.js","sources":["../src/errors.js","../src/functions.js","../src/Fold.js","../src/notFound.js","../src/PartialGetter.js","../src/Getter.js","../src/Setter.js","../src/Traversal.js","../src/Optional.js","../src/Lens.js","../src/Reviewer.js","../src/Prism.js","../src/Iso.js","../src/operations.js"],"sourcesContent":["// define error classes as instructed in\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\n\nexport class OpticCreationError extends Error {\n  constructor(optic, ...params) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(...params)\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, OpticComposeError)\n    }\n\n    this.name = 'OpticCreationError'\n    // Custom debugging information\n    this.optic = optic\n  }\n}\n\nexport class OpticComposeError extends Error {\n  constructor(optic1, optic2, ...params) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(...params)\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, OpticComposeError)\n    }\n\n    this.name = 'OpticComposeError'\n    // Custom debugging information\n    this.optic1 = optic1\n    this.optic2 = optic2\n  }\n}\n\nexport class UnavailableOpticOperationError extends Error {\n  constructor(operation, optic, ...params) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(...params)\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, OpticComposeError)\n    }\n\n    this.name = 'UnavailableOpticOperationError'\n    // Custom debugging information\n    this.operation = operation\n    this.optic = optic\n  }\n}\n","/**\n * This module should be private and only for internal use\n */\n\n/**\n * Currify any function you need!\n *\n * @param {*} f - Function to be currified\n * @param {number} arity - Initial arity of the function to currify\n * @param  {...any} args - Additional arguments to be passed (optional)\n */\nexport const curry = (f, arity = f.length, ...args) =>\n  arity <= args.length ? f(...args) : (...argz) => curry(f, arity, ...args, ...argz)\n\n/**\n * Function composition!\n *\n * @param  {...any} fns - Comma-separated list of functions to be composed (right -> left)\n */\nexport const compose = (...fns) => (args) => fns.reduceRight((x, f) => f(x), args)\n\n// get : s -> {s: a} -> Maybe a\nexport const get = curry((key, obj) => obj[key])\n\n// set : String -> a -> {k: v} -> {k: v}\nexport const set = curry((key, val, obj) => (obj[key] ? { ...obj, [key]: val } : obj))\n\n// setIndex : Index -> a -> [a] -> [a]\nexport const setIndex = curry((index, val, array) => array.map((v, i) => (i == index ? val : v)))\n\n// toUpper : String -> String\nexport const toUpper = (str) => str.toUpperCase()\n","import { curry } from './functions'\n\nclass Fold {\n  constructor(reduce, toArray) {\n    if (!reduce) this.reduce = (f, i, obj) => toArray(obj).reduce(f, i)\n    else this.reduce = reduce\n\n    if (!toArray) this.toArray = (obj) => reduce((acc, cur) => acc.concat(cur), [], obj)\n    else this.toArray = toArray\n  }\n\n  // itself\n  get asFold() {\n    return this\n  }\n}\n\n// fold : ((b -> a -> b) -> b -> s -> b) → Fold s a\nexport const foldFromReduce = curry((reduce) => new Fold(reduce, null))\n// fold : (s -> [a]) -> Fold s a\nexport const foldFromToArray = curry((toArray) => new Fold(null, toArray))\n// fold : ((b -> a -> b) -> b -> s -> b) -> (s -> [a]) -> Fold s a\nexport const fold = curry((reduce, toArray) => new Fold(reduce, toArray))\n","/**\n * The special value for 'not found'\n */\nexport const notFound = Symbol('notFound')\n\nexport const isNotFound = (x) => x === notFound\n\nexport const notFoundToList = (v) => (isNotFound(v) ? [] : [v])\n","import { fold } from './Fold'\nimport { curry } from './functions'\nimport { notFoundToList } from './notFound'\n\n/**\n * AKA: Affine Fold\n */\nclass PartialGetter {\n  constructor(preview) {\n    this.preview = preview\n\n    // derived operations\n    this.reduce = (f, i, obj) => notFoundToList(this.preview(obj)).reduce(f, i)\n    this.toArray = (obj) => notFoundToList(this.preview(obj))\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // itself\n  get asPartialGetter() {\n    return this\n  }\n}\n\n// partialGetter : (s → Maybe a) → AffineFold s a\nexport const partialGetter = curry((preview) => new PartialGetter(preview))\n","import { fold } from './Fold'\nimport { curry } from './functions'\nimport { partialGetter } from './PartialGetter'\n\nclass Getter {\n  constructor(get) {\n    this.get = get\n\n    // derived operations\n    this.reduce = (f, i, obj) => f(i, this.get(obj))\n    this.toArray = (obj) => [this.get(obj)]\n    this.preview = this.get\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // partial getter = preview\n  get asPartialGetter() {\n    return partialGetter(this.get)\n  }\n\n  // itself\n  get asGetter() {\n    return this\n  }\n}\n\n// getter : (s → a) → Getter s a\nexport const getter = curry((get) => new Getter(get))\n","import { curry } from './functions'\n\nclass Setter {\n  constructor(over) {\n    this.over = over\n\n    // derived operations\n    this.set = (val, x) => this.over(() => val, x)\n  }\n\n  // itself\n  get asSetter() {\n    return this\n  }\n}\n\n// setter : ((a → a, s) → s) → Setter s a\nexport const setter = curry((over) => new Setter(over))\n","import { fold } from './Fold'\nimport { curry } from './functions'\nimport { setter } from './Setter'\n\nclass Traversal {\n  constructor(reduce, toArray, over) {\n    if (!reduce) this.reduce = (f, i, obj) => toArray(obj).reduce(f, i)\n    else this.reduce = reduce\n\n    if (!toArray) this.toArray = (obj) => reduce((acc, cur) => acc.concat(cur), [], obj)\n    else this.toArray = toArray\n\n    this.over = over\n\n    // derived operations\n    this.set = (val, x) => this.over(() => val, x)\n  }\n\n  // setter = over + set\n  get asSetter() {\n    return setter(this.over)\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // itself\n  get asTraversal() {\n    return this\n  }\n}\n\n// traversal : ((b -> a -> b) -> b -> s -> b) → ((a -> a) -> s -> s) -> Traversal s a\nexport const traversalFromReduce = curry((reduce, over) => new Traversal(reduce, null, over))\n// traversal : (s -> [a]) -> ((a -> a) -> s -> s) -> Traversal s a\nexport const traversalFromToArray = curry((toArray, over) => new Traversal(null, toArray, over))\n// traversal : ((b -> a -> b) -> b -> s -> b) -> (s -> [a])\n//           -> ((a -> a) -> s -> s) -> Traversal s a\nexport const traversal = curry((reduce, toArray, over) => new Traversal(reduce, toArray, over))\n\n// values : Traversal [a] a\nexport const values = traversal(\n  (f, i, obj) => obj.reduce(f, i),\n  (obj) => [...obj],\n  (f, obj) => obj.map(f),\n)\n\n// entries : Traversal Object [K, V]\nexport const entries = traversalFromToArray(\n  (obj) => [...Object.entries(obj)],\n  (f, obj) => Object.fromEntries([...Object.entries(obj)].map(f)),\n)\n","import { OpticCreationError } from './errors'\nimport { fold } from './Fold'\nimport { curry, setIndex } from './functions'\nimport { isNotFound, notFound, notFoundToList } from './notFound'\nimport { partialGetter } from './PartialGetter'\nimport { setter } from './Setter'\nimport { traversal } from './Traversal'\n\n/**\n * AKA: Affine Traversal\n */\nclass Optional {\n  constructor(preview, set) {\n    this.preview = preview\n    this.set = set\n\n    // derived operations\n    this.over = (f, obj) => {\n      const v = this.preview(obj)\n      return isNotFound(v) ? obj : this.set(f(v), obj)\n    }\n    this.reduce = (f, i, obj) => notFoundToList(this.preview(obj)).reduce(f, i)\n    this.toArray = (obj) => notFoundToList(this.preview(obj))\n  }\n\n  // setter = over + set\n  get asSetter() {\n    return setter(this.over)\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // traversal = reduce + toArray + over\n  get asTraversal() {\n    return traversal(this.reduce, this.toArray, this.over)\n  }\n\n  // partial getter = preview\n  get asPartialGetter() {\n    return partialGetter(this.preview)\n  }\n\n  // itself\n  get asOptional() {\n    return this\n  }\n}\n\n// optional : (s → Maybe a) → ((a, s) → s) → Optional s a\nexport const optional = curry((preview, set) => new Optional(preview, set))\n\n// optionalProp : String → Optional s a\nexport const optionalProp = (key) =>\n  optional(\n    (obj) => obj[key] || notFound,\n    (val, obj) => (obj[key] ? { ...obj, [key]: val } : obj),\n  )\n\n// optionalIx : Number → Optional s a\nexport const optionalIx = (index) =>\n  optional(\n    (obj) => obj[index] || notFound,\n    (val, obj) => (obj[index] ? setIndex(index, val, obj) : obj),\n  )\n\n// maybe : (String | Int | Lens s a) -> Optional s a\nexport const maybe = (optic) => {\n  if (typeof optic == 'string' || optic instanceof String) {\n    return optionalProp(optic)\n  }\n  if (typeof optic == 'number' && !isNaN(optic)) {\n    return optionalIx(optic)\n  }\n  if (optic.asLens) {\n    const l = optic.asLens\n    return optional(l.get, l.set)\n  }\n  throw new OpticCreationError('Optional', typeof optic + ' cannot be turned into optional')\n}\n","import { fold } from './Fold'\nimport { curry, get, set, setIndex } from './functions'\nimport { getter } from './Getter'\nimport { isNotFound, notFound } from './notFound'\nimport { optional } from './Optional'\nimport { partialGetter } from './PartialGetter'\nimport { setter } from './Setter'\nimport { traversal } from './Traversal'\n\nclass Lens {\n  constructor(get, set) {\n    this.get = get\n    this.set = set\n\n    // derived operations\n    this.over = (f, obj) => this.set(f(this.get(obj)), obj)\n    this.reduce = (f, i, obj) => f(i, this.get(obj))\n    this.toArray = (obj) => [this.get(obj)]\n    this.preview = this.get\n  }\n\n  // setter = over + set\n  get asSetter() {\n    return setter(this.over)\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // traversal = reduce + toArray + over\n  get asTraversal() {\n    return traversal(this.reduce, this.toArray, this.over)\n  }\n\n  // optional = preview + set\n  get asOptional() {\n    return optional(this.get, this.set)\n  }\n\n  // getter = get\n  get asGetter() {\n    return getter(this.get)\n  }\n\n  // partial getter = preview\n  get asPartialGetter() {\n    return partialGetter(this.get)\n  }\n\n  // itself\n  get asLens() {\n    return this\n  }\n}\n\n// lens : (s → a) → ((a, s) → s) → Lens s a\nexport const lens = curry((get, set) => new Lens(get, set))\n\n// ix : Number → Lens s a\nexport const ix = (index) => lens(get(index), setIndex(index))\n\n// mustBePresent : String → Lens s a\nexport const mustBePresent = (key) => lens(get(key), set(key))\n\n// alter : String → Lens (Maybe s) (Maybe a)\nexport const alter = (key) =>\n  lens(\n    (obj) => (isNotFound(obj) ? notFound : obj[key] || notFound),\n    (val, obj) => {\n      if (isNotFound(val)) {\n        // eslint-disable-next-line no-unused-vars\n        const { [key]: _, ...newObj } = obj\n        return newObj\n      } else {\n        return { ...obj, [key]: val }\n      }\n    },\n  )\n","import { curry } from './functions'\n\nclass Reviewer {\n  constructor(review) {\n    this.review = review\n  }\n\n  // itself\n  get asReviewer() {\n    return this\n  }\n}\n\n// reviewer : (a → s) → Prism s a\nexport const reviewer = curry((review) => new Reviewer(review))\n","import { fold } from './Fold'\nimport { curry } from './functions'\nimport { isNotFound, notFound, notFoundToList } from './notFound'\nimport { optional } from './Optional'\nimport { partialGetter } from './PartialGetter'\nimport { reviewer } from './Reviewer'\nimport { setter } from './Setter'\nimport { traversal } from './Traversal'\n\nclass Prism {\n  constructor(preview, set, review) {\n    this.preview = preview\n    this.set = set\n    this.review = review\n\n    // derived operations\n    this.over = (f, obj) => {\n      const v = this.preview(obj)\n      return isNotFound(v) ? obj : this.set(f(v), obj)\n    }\n    this.reduce = (f, i, obj) => notFoundToList(this.preview(obj)).reduce(f, i)\n    this.toArray = (obj) => notFoundToList(this.preview(obj))\n  }\n\n  // setter = over + set\n  get asSetter() {\n    return setter(this.over)\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // traversal = reduce + toArray + over\n  get asTraversal() {\n    return traversal(this.reduce, this.toArray, this.over)\n  }\n\n  // partial getter = preview\n  get asPartialGetter() {\n    return partialGetter(this.preview)\n  }\n\n  // optional = preview + set\n  get asOptional() {\n    return optional(this.preview, this.set)\n  }\n\n  // reviewer = review\n  get asReviewer() {\n    return reviewer(this.review)\n  }\n\n  // itself\n  get asPrism() {\n    return this\n  }\n}\n\n// prism : (s → Maybe a) → ((a, s) → s) → (a → s) → Prism s a\nexport const prism = curry((preview, set, review) => new Prism(preview, set, review))\n\nconst checkPresence = (mustBePresent, obj) =>\n  Object.keys(mustBePresent).every((k) => obj && obj[k] && obj[k] === mustBePresent[k])\n\n/**\n * Check that a subset of properties with their values are present.\n * Useful for working with Redux actions, or variants in general.\n *\n * @param {object} mustBePresent\n */\nexport const has = (mustBePresent) =>\n  prism(\n    (obj) => (checkPresence(mustBePresent, obj) ? { ...obj } : notFound),\n    (newObj, obj) =>\n      checkPresence(mustBePresent, obj) ? { ...newObj, ...mustBePresent } : { ...obj },\n    (newObj) => ({ ...newObj, ...mustBePresent }),\n  )\n","import { fold } from './Fold'\nimport { curry } from './functions'\nimport { getter } from './Getter'\nimport { lens } from './Lens'\nimport { optional } from './Optional'\nimport { partialGetter } from './PartialGetter'\nimport { prism } from './Prism'\nimport { reviewer } from './Reviewer'\nimport { setter } from './Setter'\nimport { traversal } from './Traversal'\n\nclass Iso {\n  constructor(get, review) {\n    this.get = get\n    this.review = review\n\n    // derived operations\n    this.set = (x) => this.review(x)\n    this.over = (f, obj) => this.review(f(this.get(obj)))\n    this.reduce = (f, i, obj) => f(i, this.get(obj))\n    this.toArray = (obj) => [this.get(obj)]\n    this.preview = this.get\n  }\n\n  // setter = over + set\n  get asSetter() {\n    return setter(this.over)\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // traversal = reduce + toArray + over\n  get asTraversal() {\n    return traversal(this.reduce, this.toArray, this.over)\n  }\n\n  // optional = preview + set\n  get asOptional() {\n    return optional(this.get, this.set)\n  }\n\n  // prism = preview + set + review\n  get asPrism() {\n    return prism(this.get, this.set, this.review)\n  }\n\n  // reviewer = review\n  get asReviewer() {\n    return reviewer(this.review)\n  }\n\n  // getter = get\n  get asGetter() {\n    return getter(this.get)\n  }\n\n  // partial getter = preview\n  get asPartialGetter() {\n    return partialGetter(this.get)\n  }\n\n  // lens\n  get asLens() {\n    return lens(this.get, this.set)\n  }\n\n  // itself\n  get asIso() {\n    return this\n  }\n}\n\n// iso : (s → a) → (a → s) → Iso s a\nexport const iso = curry((get, review) => new Iso(get, review))\n\n// singleton : Key -> Iso { k: a } a\nexport const single = (key) =>\n  iso(\n    (obj) => obj[key],\n    (val) => ({ [key]: val }),\n  )\n","import { OpticComposeError, UnavailableOpticOperationError } from './errors'\nimport { fold } from './Fold'\nimport { curry } from './functions'\nimport { getter } from './Getter'\nimport { alter, ix, lens } from './Lens'\nimport { isNotFound, notFound } from './notFound'\nimport { optional } from './Optional'\nimport { partialGetter } from './PartialGetter'\nimport { prism } from './Prism'\nimport { reviewer } from './Reviewer'\nimport { setter } from './Setter'\nimport { traversal } from './Traversal'\n\n// combine two previews\nconst combinePreviews = (p1, p2) => (x) => {\n  const v = p1(x)\n  return isNotFound(v) ? notFound : p2(v)\n}\n\n// r1 comes from Fold a b => ((r -> b -> r) -> r -> a -> r)\n// r2 comes from Fold b c => ((r -> c -> r) -> r -> b -> r)\n// and we want to get Fold a c => ((r -> c -> r) -> r -> a -> r)\nconst combineReduces = (r1, r2) => (f, i, obj) => r2((acc, cur) => r1(f, acc, cur), i, obj)\n\n/**\n * Compose two optics\n *\n * @param {*} optic1\n * @param {*} optic2\n */\nconst compose2Optics = (optic1, optic2) => {\n  // start from most specific (iso) to less specific (fold, setter, reviewer)\n  if (optic1.asLens && optic2.asLens) {\n    const o1 = optic1.asLens\n    const o2 = optic2.asLens\n    return lens(\n      (x) => o2.get(o1.get(x)),\n      (v, x) => o1.over((inner) => o2.set(v, inner), x),\n    )\n  } else if (optic1.asPrism && optic2.asPrism) {\n    const o1 = optic1.asPrism\n    const o2 = optic2.asPrism\n    return prism(\n      combinePreviews(o1.preview, o2.preview),\n      (v, x) => o1.over((inner) => o2.set(v, inner), x),\n      (x) => o2.review(o1.review(x)),\n    )\n  } else if (optic1.asOptional && optic2.asOptional) {\n    const o1 = optic1.asOptional\n    const o2 = optic2.asOptional\n    return optional(combinePreviews(o1.preview, o2.preview), (v, x) =>\n      o1.over((inner) => o2.set(v, inner), x),\n    )\n  } else if (optic1.asTraversal && optic2.asTraversal) {\n    const o1 = optic1.asTraversal\n    const o2 = optic2.asTraversal\n    return traversal(\n      combineReduces(o1.reduce, o2.reduce),\n      (obj) => o1.toArray(obj).flatMap((x) => o2.toArray(x)),\n      (f, x) => o1.over((inner) => o2.over(f, inner), x),\n    )\n  } else if (optic1.asGetter && optic2.asGetter) {\n    const o1 = optic1.asGetter\n    const o2 = optic2.asGetter\n    return getter((x) => o2.get(o1.get(x)))\n  } else if (optic1.asPartialGetter && optic2.asPartialGetter) {\n    const o1 = optic1.asPartialGetter\n    const o2 = optic2.asPartialGetter\n    return partialGetter(combinePreviews(o1.preview, o2.preview))\n  } else if (optic1.asFold && optic2.asFold) {\n    const o1 = optic1.asFold\n    const o2 = optic2.asFold\n    return fold(combineReduces(o1.reduce, o2.reduce), (obj) =>\n      o1.toArray(obj).flatMap((x) => o2.toArray(x)),\n    )\n  } else if (optic1.asSetter && optic2.asSetter) {\n    const o1 = optic1.asSetter\n    const o2 = optic2.asSetter\n    return setter((f, x) => o1.over((inner) => o2.over(f, inner), x))\n  } else if (optic1.asReviewer && optic2.asReviewer) {\n    const o1 = optic1.asReviewer\n    const o2 = optic2.asReviewer\n    return reviewer((x) => o2.review(o1.review(x)))\n  }\n\n  throw new OpticComposeError(\n    optic1.constructor.name,\n    optic2.constructor.name,\n    'incompatible optics',\n  )\n}\n\nconst toOptic = (optic) => {\n  if (typeof optic == 'string' || optic instanceof String) {\n    return alter(optic)\n  }\n  if (typeof optic == 'number' && !isNaN(optic)) {\n    return ix(optic)\n  }\n  // any other case means it was already an optic\n  return optic\n}\n\n/**\n * Create a new optic by composition.\n *\n * You can use a string or integer to directly create a lens,\n * or wrap it with 'maybe' to create an optional\n *\n * @param  {...any} optics - Comma-separated or array of optics to be composed\n *\n * flatten the arguments to account for composeOptics(['this', 'that'])\n */\nexport const composeOptics = (...optics) => optics.flat().map(toOptic).reduce(compose2Optics)\nexport const optic = composeOptics\nexport const path = composeOptics\n\n// reduce : Fold s a → (r -> a -> r) -> r -> s -> r\nexport const reduce = curry((optic, f, i, obj) => {\n  if (optic.asFold) {\n    return optic.asFold.reduce(f, i, obj)\n  } else {\n    throw new UnavailableOpticOperationError(\n      'reduce',\n      optic.constructor.name,\n      'reduce is not supported by ' + optic.constructor.name,\n    )\n  }\n})\n\n// toArray : Fold s a → s → [a]\nexport const toArray = curry((optic, obj) => {\n  if (optic.asFold) {\n    return optic.asFold.toArray(obj)\n  } else {\n    throw new UnavailableOpticOperationError(\n      'toArray',\n      optic.constructor.name,\n      `toArray is not supported by ${optic.constructor.name}`,\n    )\n  }\n})\n\n// preview : Optional s a → s → Maybe a\nexport const preview = curry((optic, obj) => {\n  if (optic.asPartialGetter) {\n    return optic.asPartialGetter.preview(obj)\n  } else {\n    throw new UnavailableOpticOperationError(\n      'preview',\n      optic.constructor.name,\n      `preview is not supported by ${optic.constructor.name}`,\n    )\n  }\n})\n\n// view : Getter s a → s → a\nexport const view = curry((optic, obj) => {\n  if (optic.asGetter) {\n    return optic.asGetter.get(obj)\n  } else {\n    throw new UnavailableOpticOperationError(\n      'view/get',\n      optic.constructor.name,\n      'view/get is not supported by ' + optic.constructor.name,\n    )\n  }\n})\n\n// set : Setter s a → a → s → s\nexport const set = curry((optic, val, obj) => {\n  if (optic.asSetter) {\n    return optic.asSetter.set(val, obj)\n  } else {\n    throw new UnavailableOpticOperationError(\n      'set',\n      optic.constructor.name,\n      'set is not supported by ' + optic.constructor.name,\n    )\n  }\n})\n\n// over : Setter s a → (a → a) → s → s\nexport const over = curry((optic, f, obj) => {\n  if (optic.asSetter) {\n    return optic.asSetter.over(f, obj)\n  } else {\n    throw new UnavailableOpticOperationError(\n      'over',\n      optic.constructor.name,\n      'over is not supported by ' + optic.constructor.name,\n    )\n  }\n})\n\n// review : Reviewer s a → a → s\nexport const review = curry((optic, obj) => {\n  if (optic.asReviewer) return optic.asReviewer.review(obj)\n  else\n    throw new UnavailableOpticOperationError(\n      'review',\n      optic.constructor.name,\n      'review is not supported by ' + optic.constructor.name,\n    )\n})\n"],"names":["OpticCreationError","Error","constructor","optic","params","super","captureStackTrace","this","OpticComposeError","name","optic1","optic2","UnavailableOpticOperationError","operation","curry","f","arity","length","args","argz","compose","fns","reduceRight","x","get","key","obj","set","val","[object Object]","setIndex","index","array","map","v","i","toUpper","str","toUpperCase","Fold","reduce","toArray","acc","cur","concat","asFold","foldFromReduce","foldFromToArray","fold","notFound","Symbol","isNotFound","notFoundToList","PartialGetter","preview","asPartialGetter","partialGetter","Getter","asGetter","getter","Setter","over","asSetter","setter","Traversal","asTraversal","traversalFromReduce","traversalFromToArray","traversal","values","entries","Object","fromEntries","Optional","asOptional","optional","optionalProp","optionalIx","maybe","String","isNaN","asLens","l","Lens","lens","ix","mustBePresent","alter","_","newObj","Reviewer","review","asReviewer","reviewer","Prism","asPrism","prism","checkPresence","keys","every","k","has","Iso","asIso","iso","single","combinePreviews","p1","p2","combineReduces","r1","r2","compose2Optics","o1","o2","inner","flatMap","toOptic","composeOptics","optics","flat","path","view"],"mappings":"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"}