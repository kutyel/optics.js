{"version":3,"file":"optic.js","sources":["../src/errors.js","../src/functions.js","../src/Fold.js","../src/notFound.js","../src/PartialGetter.js","../src/Getter.js","../src/Setter.js","../src/Traversal.js","../src/Optional.js","../src/Lens.js","../src/Reviewer.js","../src/Prism.js","../src/Iso.js","../src/operations.js"],"sourcesContent":["// define error classes as instructed in\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\n\nexport class OpticCreationError extends Error {\n  constructor(optic, ...params) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(...params)\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, OpticComposeError)\n    }\n\n    this.name = 'OpticCreationError'\n    // Custom debugging information\n    this.optic = optic\n  }\n}\n\nexport class OpticComposeError extends Error {\n  constructor(optic1, optic2, ...params) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(...params)\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, OpticComposeError)\n    }\n\n    this.name = 'OpticComposeError'\n    // Custom debugging information\n    this.optic1 = optic1\n    this.optic2 = optic2\n  }\n}\n\nexport class UnavailableOpticOperationError extends Error {\n  constructor(operation, optic, ...params) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(...params)\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, OpticComposeError)\n    }\n\n    this.name = 'UnavailableOpticOperationError'\n    // Custom debugging information\n    this.operation = operation\n    this.optic = optic\n  }\n}\n","/**\n * This module should be private and only for internal use\n */\n\n/**\n * Currify any function you need!\n *\n * @param {*} f - Function to be currified\n * @param {number} arity - Initial arity of the function to currify\n * @param  {...any} args - Additional arguments to be passed (optional)\n */\nexport const curry = (f, arity = f.length, ...args) =>\n  arity <= args.length ? f(...args) : (...argz) => curry(f, arity, ...args, ...argz)\n\n/**\n * Function composition!\n *\n * @param  {...any} fns - Comma-separated list of functions to be composed (right -> left)\n */\nexport const compose = (...fns) => (args) => fns.reduceRight((x, f) => f(x), args)\n\n// get : s -> {s: a} -> Maybe a\nexport const get = curry((key, obj) => obj[key])\n\n// set : String -> a -> {k: v} -> {k: v}\nexport const set = curry((key, val, obj) => (obj[key] ? { ...obj, [key]: val } : obj))\n\n// setIndex : Index -> a -> [a] -> [a]\nexport const setIndex = curry((index, val, array) => array.map((v, i) => (i == index ? val : v)))\n\n// toUpper : String -> String\nexport const toUpper = (str) => str.toUpperCase()\n","import { curry } from './functions'\n\nclass Fold {\n  constructor(reduce, toArray) {\n    if (!reduce) this.reduce = (f, i, obj) => toArray(obj).reduce(f, i)\n    else this.reduce = reduce\n\n    if (!toArray) this.toArray = (obj) => reduce((acc, cur) => acc.concat(cur), [], obj)\n    else this.toArray = toArray\n  }\n\n  // itself\n  get asFold() {\n    return this\n  }\n}\n\n// fold : ((b -> a -> b) -> b -> s -> b) → Fold s a\nexport const foldFromReduce = curry((reduce) => new Fold(reduce, null))\n// fold : (s -> [a]) -> Fold s a\nexport const foldFromToArray = curry((toArray) => new Fold(null, toArray))\n// fold : ((b -> a -> b) -> b -> s -> b) -> (s -> [a]) -> Fold s a\nexport const fold = curry((reduce, toArray) => new Fold(reduce, toArray))\n","/**\n * The special value for 'not found'\n */\nexport const notFound = Symbol('notFound')\n\nexport const isNotFound = (x) => x === notFound\n\nexport const notFoundToList = (v) => (isNotFound(v) ? [] : [v])\n","import { fold } from './Fold'\nimport { curry } from './functions'\nimport { notFoundToList } from './notFound'\n\n/**\n * AKA: Affine Fold\n */\nclass PartialGetter {\n  constructor(preview) {\n    this.preview = preview\n\n    // derived operations\n    this.reduce = (f, i, obj) => notFoundToList(this.preview(obj)).reduce(f, i)\n    this.toArray = (obj) => notFoundToList(this.preview(obj))\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // itself\n  get asPartialGetter() {\n    return this\n  }\n}\n\n// partialGetter : (s → Maybe a) → AffineFold s a\nexport const partialGetter = curry((preview) => new PartialGetter(preview))\n","import { fold } from './Fold'\nimport { curry } from './functions'\nimport { partialGetter } from './PartialGetter'\n\nclass Getter {\n  constructor(get) {\n    this.get = get\n\n    // derived operations\n    this.reduce = (f, i, obj) => f(i, this.get(obj))\n    this.toArray = (obj) => [this.get(obj)]\n    this.preview = this.get\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // partial getter = preview\n  get asPartialGetter() {\n    return partialGetter(this.get)\n  }\n\n  // itself\n  get asGetter() {\n    return this\n  }\n}\n\n// getter : (s → a) → Getter s a\nexport const getter = curry((get) => new Getter(get))\n","import { curry } from './functions'\n\nclass Setter {\n  constructor(over) {\n    this.over = over\n\n    // derived operations\n    this.set = (val, x) => this.over(() => val, x)\n  }\n\n  // itself\n  get asSetter() {\n    return this\n  }\n}\n\n// setter : ((a → a, s) → s) → Setter s a\nexport const setter = curry((over) => new Setter(over))\n","import { fold } from './Fold'\nimport { curry } from './functions'\nimport { setter } from './Setter'\n\nclass Traversal {\n  constructor(reduce, toArray, over) {\n    if (!reduce) this.reduce = (f, i, obj) => toArray(obj).reduce(f, i)\n    else this.reduce = reduce\n\n    if (!toArray) this.toArray = (obj) => reduce((acc, cur) => acc.concat(cur), [], obj)\n    else this.toArray = toArray\n\n    this.over = over\n\n    // derived operations\n    this.set = (val, x) => this.over(() => val, x)\n  }\n\n  // setter = over + set\n  get asSetter() {\n    return setter(this.over)\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // itself\n  get asTraversal() {\n    return this\n  }\n}\n\n// traversal : ((b -> a -> b) -> b -> s -> b) → ((a -> a) -> s -> s) -> Traversal s a\nexport const traversalFromReduce = curry((reduce, over) => new Traversal(reduce, null, over))\n// traversal : (s -> [a]) -> ((a -> a) -> s -> s) -> Traversal s a\nexport const traversalFromToArray = curry((toArray, over) => new Traversal(null, toArray, over))\n// traversal : ((b -> a -> b) -> b -> s -> b) -> (s -> [a])\n//           -> ((a -> a) -> s -> s) -> Traversal s a\nexport const traversal = curry((reduce, toArray, over) => new Traversal(reduce, toArray, over))\n\n// values : Traversal [a] a\nexport const values = traversal(\n  (f, i, obj) => obj.reduce(f, i),\n  (obj) => [...obj],\n  (f, obj) => obj.map(f),\n)\n\n// entries : Traversal Object [K, V]\nexport const entries = traversalFromToArray(\n  (obj) => [...Object.entries(obj)],\n  (f, obj) => Object.fromEntries([...Object.entries(obj)].map(f)),\n)\n","import { OpticCreationError } from './errors'\nimport { fold } from './Fold'\nimport { curry, setIndex } from './functions'\nimport { isNotFound, notFound, notFoundToList } from './notFound'\nimport { partialGetter } from './PartialGetter'\nimport { setter } from './Setter'\nimport { traversal } from './Traversal'\n\n/**\n * AKA: Affine Traversal\n */\nclass Optional {\n  constructor(preview, set) {\n    this.preview = preview\n    this.set = set\n\n    // derived operations\n    this.over = (f, obj) => {\n      const v = this.preview(obj)\n      return isNotFound(v) ? obj : this.set(f(v), obj)\n    }\n    this.reduce = (f, i, obj) => notFoundToList(this.preview(obj)).reduce(f, i)\n    this.toArray = (obj) => notFoundToList(this.preview(obj))\n  }\n\n  // setter = over + set\n  get asSetter() {\n    return setter(this.over)\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // traversal = reduce + toArray + over\n  get asTraversal() {\n    return traversal(this.reduce, this.toArray, this.over)\n  }\n\n  // partial getter = preview\n  get asPartialGetter() {\n    return partialGetter(this.preview)\n  }\n\n  // itself\n  get asOptional() {\n    return this\n  }\n}\n\n// optional : (s → Maybe a) → ((a, s) → s) → Optional s a\nexport const optional = curry((preview, set) => new Optional(preview, set))\n\n// optionalProp : String → Optional s a\nexport const optionalProp = (key) =>\n  optional(\n    (obj) => obj[key] || notFound,\n    (val, obj) => (obj[key] ? { ...obj, [key]: val } : obj),\n  )\n\n// optionalIx : Number → Optional s a\nexport const optionalIx = (index) =>\n  optional(\n    (obj) => obj[index] || notFound,\n    (val, obj) => (obj[index] ? setIndex(index, val, obj) : obj),\n  )\n\n// maybe : (String | Int | Lens s a) -> Optional s a\nexport const maybe = (optic) => {\n  if (typeof optic == 'string' || optic instanceof String) {\n    return optionalProp(optic)\n  }\n  if (typeof optic == 'number' && !isNaN(optic)) {\n    return optionalIx(optic)\n  }\n  if (optic.asLens) {\n    const l = optic.asLens\n    return optional(l.get, l.set)\n  }\n  throw new OpticCreationError('Optional', typeof optic + ' cannot be turned into optional')\n}\n","import { fold } from './Fold'\nimport { curry, get, set, setIndex } from './functions'\nimport { getter } from './Getter'\nimport { isNotFound, notFound } from './notFound'\nimport { optional } from './Optional'\nimport { partialGetter } from './PartialGetter'\nimport { setter } from './Setter'\nimport { traversal } from './Traversal'\n\nclass Lens {\n  constructor(get, set) {\n    this.get = get\n    this.set = set\n\n    // derived operations\n    this.over = (f, obj) => this.set(f(this.get(obj)), obj)\n    this.reduce = (f, i, obj) => f(i, this.get(obj))\n    this.toArray = (obj) => [this.get(obj)]\n    this.preview = this.get\n  }\n\n  // setter = over + set\n  get asSetter() {\n    return setter(this.over)\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // traversal = reduce + toArray + over\n  get asTraversal() {\n    return traversal(this.reduce, this.toArray, this.over)\n  }\n\n  // optional = preview + set\n  get asOptional() {\n    return optional(this.get, this.set)\n  }\n\n  // getter = get\n  get asGetter() {\n    return getter(this.get)\n  }\n\n  // partial getter = preview\n  get asPartialGetter() {\n    return partialGetter(this.get)\n  }\n\n  // itself\n  get asLens() {\n    return this\n  }\n}\n\n// lens : (s → a) → ((a, s) → s) → Lens s a\nexport const lens = curry((get, set) => new Lens(get, set))\n\n// ix : Number → Lens s a\nexport const ix = (index) => lens(get(index), setIndex(index))\n\n// mustBePresent : String → Lens s a\nexport const mustBePresent = (key) => lens(get(key), set(key))\n\n// alter : String → Lens (Maybe s) (Maybe a)\nexport const alter = (key) =>\n  lens(\n    (obj) => (isNotFound(obj) ? notFound : obj[key] || notFound),\n    (val, obj) => {\n      if (isNotFound(val)) {\n        // eslint-disable-next-line no-unused-vars\n        const { [key]: _, ...newObj } = obj\n        return newObj\n      } else {\n        return { ...obj, [key]: val }\n      }\n    },\n  )\n","import { curry } from './functions'\n\nclass Reviewer {\n  constructor(review) {\n    this.review = review\n  }\n\n  // itself\n  get asReviewer() {\n    return this\n  }\n}\n\n// reviewer : (a → s) → Prism s a\nexport const reviewer = curry((review) => new Reviewer(review))\n","import { fold } from './Fold'\nimport { curry } from './functions'\nimport { isNotFound, notFound, notFoundToList } from './notFound'\nimport { optional } from './Optional'\nimport { partialGetter } from './PartialGetter'\nimport { reviewer } from './Reviewer'\nimport { setter } from './Setter'\nimport { traversal } from './Traversal'\n\nclass Prism {\n  constructor(preview, set, review) {\n    this.preview = preview\n    this.set = set\n    this.review = review\n\n    // derived operations\n    this.over = (f, obj) => {\n      const v = this.preview(obj)\n      return isNotFound(v) ? obj : this.set(f(v), obj)\n    }\n    this.reduce = (f, i, obj) => notFoundToList(this.preview(obj)).reduce(f, i)\n    this.toArray = (obj) => notFoundToList(this.preview(obj))\n  }\n\n  // setter = over + set\n  get asSetter() {\n    return setter(this.over)\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // traversal = reduce + toArray + over\n  get asTraversal() {\n    return traversal(this.reduce, this.toArray, this.over)\n  }\n\n  // partial getter = preview\n  get asPartialGetter() {\n    return partialGetter(this.preview)\n  }\n\n  // optional = preview + set\n  get asOptional() {\n    return optional(this.preview, this.set)\n  }\n\n  // reviewer = review\n  get asReviewer() {\n    return reviewer(this.review)\n  }\n\n  // itself\n  get asPrism() {\n    return this\n  }\n}\n\n// prism : (s → Maybe a) → ((a, s) → s) → (a → s) → Prism s a\nexport const prism = curry((preview, set, review) => new Prism(preview, set, review))\n\nconst checkPresence = (mustBePresent, obj) =>\n  Object.keys(mustBePresent).every((k) => obj && obj[k] && obj[k] === mustBePresent[k])\n\n/**\n * Check that a subset of properties with their values are present.\n * Useful for working with Redux actions, or variants in general.\n *\n * @param {object} mustBePresent\n */\nexport const has = (mustBePresent) =>\n  prism(\n    (obj) => (checkPresence(mustBePresent, obj) ? { ...obj } : notFound),\n    (newObj, obj) =>\n      checkPresence(mustBePresent, obj) ? { ...newObj, ...mustBePresent } : { ...obj },\n    (newObj) => ({ ...newObj, ...mustBePresent }),\n  )\n","import { fold } from './Fold'\nimport { curry } from './functions'\nimport { getter } from './Getter'\nimport { lens } from './Lens'\nimport { optional } from './Optional'\nimport { partialGetter } from './PartialGetter'\nimport { prism } from './Prism'\nimport { reviewer } from './Reviewer'\nimport { setter } from './Setter'\nimport { traversal } from './Traversal'\n\nclass Iso {\n  constructor(get, review) {\n    this.get = get\n    this.review = review\n\n    // derived operations\n    this.set = (x) => this.review(x)\n    this.over = (f, obj) => this.review(f(this.get(obj)))\n    this.reduce = (f, i, obj) => f(i, this.get(obj))\n    this.toArray = (obj) => [this.get(obj)]\n    this.preview = this.get\n  }\n\n  // setter = over + set\n  get asSetter() {\n    return setter(this.over)\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // traversal = reduce + toArray + over\n  get asTraversal() {\n    return traversal(this.reduce, this.toArray, this.over)\n  }\n\n  // optional = preview + set\n  get asOptional() {\n    return optional(this.get, this.set)\n  }\n\n  // prism = preview + set + review\n  get asPrism() {\n    return prism(this.get, this.set, this.review)\n  }\n\n  // reviewer = review\n  get asReviewer() {\n    return reviewer(this.review)\n  }\n\n  // getter = get\n  get asGetter() {\n    return getter(this.get)\n  }\n\n  // partial getter = preview\n  get asPartialGetter() {\n    return partialGetter(this.get)\n  }\n\n  // lens\n  get asLens() {\n    return lens(this.get, this.set)\n  }\n\n  // itself\n  get asIso() {\n    return this\n  }\n}\n\n// iso : (s → a) → (a → s) → Iso s a\nexport const iso = curry((get, review) => new Iso(get, review))\n\n// singleton : Key -> Iso { k: a } a\nexport const single = (key) =>\n  iso(\n    (obj) => obj[key],\n    (val) => ({ [key]: val }),\n  )\n","import { OpticComposeError, UnavailableOpticOperationError } from './errors'\nimport { fold } from './Fold'\nimport { curry } from './functions'\nimport { getter } from './Getter'\nimport { alter, ix, lens } from './Lens'\nimport { isNotFound, notFound } from './notFound'\nimport { optional } from './Optional'\nimport { partialGetter } from './PartialGetter'\nimport { prism } from './Prism'\nimport { reviewer } from './Reviewer'\nimport { setter } from './Setter'\nimport { traversal } from './Traversal'\n\n// combine two previews\nconst combinePreviews = (p1, p2) => (x) => {\n  const v = p1(x)\n  return isNotFound(v) ? notFound : p2(v)\n}\n\n// r1 comes from Fold a b => ((r -> b -> r) -> r -> a -> r)\n// r2 comes from Fold b c => ((r -> c -> r) -> r -> b -> r)\n// and we want to get Fold a c => ((r -> c -> r) -> r -> a -> r)\nconst combineReduces = (r1, r2) => (f, i, obj) => r2((acc, cur) => r1(f, acc, cur), i, obj)\n\n/**\n * Compose two optics\n *\n * @param {*} optic1\n * @param {*} optic2\n */\nconst compose2Optics = (optic1, optic2) => {\n  // start from most specific (iso) to less specific (fold, setter, reviewer)\n  if (optic1.asLens && optic2.asLens) {\n    const o1 = optic1.asLens\n    const o2 = optic2.asLens\n    return lens(\n      (x) => o2.get(o1.get(x)),\n      (v, x) => o1.over((inner) => o2.set(v, inner), x),\n    )\n  } else if (optic1.asPrism && optic2.asPrism) {\n    const o1 = optic1.asPrism\n    const o2 = optic2.asPrism\n    return prism(\n      combinePreviews(o1.preview, o2.preview),\n      (v, x) => o1.over((inner) => o2.set(v, inner), x),\n      (x) => o2.review(o1.review(x)),\n    )\n  } else if (optic1.asOptional && optic2.asOptional) {\n    const o1 = optic1.asOptional\n    const o2 = optic2.asOptional\n    return optional(combinePreviews(o1.preview, o2.preview), (v, x) =>\n      o1.over((inner) => o2.set(v, inner), x),\n    )\n  } else if (optic1.asTraversal && optic2.asTraversal) {\n    const o1 = optic1.asTraversal\n    const o2 = optic2.asTraversal\n    return traversal(\n      combineReduces(o1.reduce, o2.reduce),\n      (obj) => o1.toArray(obj).flatMap((x) => o2.toArray(x)),\n      (f, x) => o1.over((inner) => o2.over(f, inner), x),\n    )\n  } else if (optic1.asGetter && optic2.asGetter) {\n    const o1 = optic1.asGetter\n    const o2 = optic2.asGetter\n    return getter((x) => o2.get(o1.get(x)))\n  } else if (optic1.asPartialGetter && optic2.asPartialGetter) {\n    const o1 = optic1.asPartialGetter\n    const o2 = optic2.asPartialGetter\n    return partialGetter(combinePreviews(o1.preview, o2.preview))\n  } else if (optic1.asFold && optic2.asFold) {\n    const o1 = optic1.asFold\n    const o2 = optic2.asFold\n    return fold(combineReduces(o1.reduce, o2.reduce), (obj) =>\n      o1.toArray(obj).flatMap((x) => o2.toArray(x)),\n    )\n  } else if (optic1.asSetter && optic2.asSetter) {\n    const o1 = optic1.asSetter\n    const o2 = optic2.asSetter\n    return setter((f, x) => o1.over((inner) => o2.over(f, inner), x))\n  } else if (optic1.asReviewer && optic2.asReviewer) {\n    const o1 = optic1.asReviewer\n    const o2 = optic2.asReviewer\n    return reviewer((x) => o2.review(o1.review(x)))\n  }\n\n  throw new OpticComposeError(\n    optic1.constructor.name,\n    optic2.constructor.name,\n    'incompatible optics',\n  )\n}\n\nconst toOptic = (optic) => {\n  if (typeof optic == 'string' || optic instanceof String) {\n    return alter(optic)\n  }\n  if (typeof optic == 'number' && !isNaN(optic)) {\n    return ix(optic)\n  }\n  // any other case means it was already an optic\n  return optic\n}\n\n/**\n * Create a new optic by composition.\n *\n * You can use a string or integer to directly create a lens,\n * or wrap it with 'maybe' to create an optional\n *\n * @param  {...any} optics - Comma-separated or array of optics to be composed\n *\n * flatten the arguments to account for composeOptics(['this', 'that'])\n */\nexport const composeOptics = (...optics) => optics.flat().map(toOptic).reduce(compose2Optics)\nexport const optic = composeOptics\nexport const path = composeOptics\n\n// reduce : Fold s a → (r -> a -> r) -> r -> s -> r\nexport const reduce = curry((optic, f, i, obj) => {\n  if (optic.asFold) {\n    return optic.asFold.reduce(f, i, obj)\n  } else {\n    throw new UnavailableOpticOperationError(\n      'reduce',\n      optic.constructor.name,\n      'reduce is not supported by ' + optic.constructor.name,\n    )\n  }\n})\n\n// toArray : Fold s a → s → [a]\nexport const toArray = curry((optic, obj) => {\n  if (optic.asFold) {\n    return optic.asFold.toArray(obj)\n  } else {\n    throw new UnavailableOpticOperationError(\n      'toArray',\n      optic.constructor.name,\n      `toArray is not supported by ${optic.constructor.name}`,\n    )\n  }\n})\n\n// preview : Optional s a → s → Maybe a\nexport const preview = curry((optic, obj) => {\n  if (optic.asPartialGetter) {\n    return optic.asPartialGetter.preview(obj)\n  } else {\n    throw new UnavailableOpticOperationError(\n      'preview',\n      optic.constructor.name,\n      `preview is not supported by ${optic.constructor.name}`,\n    )\n  }\n})\n\n// view : Getter s a → s → a\nexport const view = curry((optic, obj) => {\n  if (optic.asGetter) {\n    return optic.asGetter.get(obj)\n  } else {\n    throw new UnavailableOpticOperationError(\n      'view/get',\n      optic.constructor.name,\n      'view/get is not supported by ' + optic.constructor.name,\n    )\n  }\n})\n\n// set : Setter s a → a → s → s\nexport const set = curry((optic, val, obj) => {\n  if (optic.asSetter) {\n    return optic.asSetter.set(val, obj)\n  } else {\n    throw new UnavailableOpticOperationError(\n      'set',\n      optic.constructor.name,\n      'set is not supported by ' + optic.constructor.name,\n    )\n  }\n})\n\n// over : Setter s a → (a → a) → s → s\nexport const over = curry((optic, f, obj) => {\n  if (optic.asSetter) {\n    return optic.asSetter.over(f, obj)\n  } else {\n    throw new UnavailableOpticOperationError(\n      'over',\n      optic.constructor.name,\n      'over is not supported by ' + optic.constructor.name,\n    )\n  }\n})\n\n// review : Reviewer s a → a → s\nexport const review = curry((optic, obj) => {\n  if (optic.asReviewer) return optic.asReviewer.review(obj)\n  else\n    throw new UnavailableOpticOperationError(\n      'review',\n      optic.constructor.name,\n      'review is not supported by ' + optic.constructor.name,\n    )\n})\n"],"names":["OpticCreationError","optic","_this","Error","captureStackTrace","OpticComposeError","name","optic1","optic2","_this2","UnavailableOpticOperationError","operation","_this3","curry","f","arity","length","args","get","key","obj","set","val","setIndex","index","array","map","v","i","Fold","reduce","toArray","acc","cur","concat","foldFromReduce","foldFromToArray","fold","notFound","Symbol","isNotFound","x","notFoundToList","PartialGetter","preview","this","partialGetter","Getter","getter","Setter","over","setter","Traversal","traversalFromReduce","traversalFromToArray","traversal","values","entries","Object","fromEntries","Optional","optional","optionalProp","optionalIx","Lens","lens","ix","alter","_","Reviewer","review","reviewer","Prism","prism","checkPresence","mustBePresent","keys","every","k","Iso","iso","combinePreviews","p1","p2","combineReduces","r1","r2","compose2Optics","asLens","o1","o2","inner","asPrism","asOptional","asTraversal","flatMap","asGetter","asPartialGetter","asFold","asSetter","asReviewer","constructor","toOptic","String","isNaN","composeOptics","flat","path","view","reduceRight","newObj","l","str","toUpperCase"],"mappings":"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"}