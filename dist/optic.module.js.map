{"version":3,"file":"optic.module.js","sources":["../src/errors.js","../src/functions.js","../src/Fold.js","../src/notFound.js","../src/PartialGetter.js","../src/Getter.js","../src/Setter.js","../src/Traversal.js","../src/Optional.js","../src/Lens.js","../src/Reviewer.js","../src/Prism.js","../src/Iso.js","../src/operations.js"],"sourcesContent":["// define error classes as instructed in\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\n\nexport class OpticCreationError extends Error {\n  constructor(optic, ...params) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(...params)\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, OpticComposeError)\n    }\n\n    this.name = 'OpticCreationError'\n    // Custom debugging information\n    this.optic = optic\n  }\n}\n\nexport class OpticComposeError extends Error {\n  constructor(optic1, optic2, ...params) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(...params)\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, OpticComposeError)\n    }\n\n    this.name = 'OpticComposeError'\n    // Custom debugging information\n    this.optic1 = optic1\n    this.optic2 = optic2\n  }\n}\n\nexport class UnavailableOpticOperationError extends Error {\n  constructor(operation, optic, ...params) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(...params)\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, OpticComposeError)\n    }\n\n    this.name = 'UnavailableOpticOperationError'\n    // Custom debugging information\n    this.operation = operation\n    this.optic = optic\n  }\n}\n","/**\n * This module should be private and only for internal use\n */\n\n/**\n * Currify any function you need!\n *\n * @param {*} f - Function to be currified\n * @param {number} arity - Initial arity of the function to currify\n * @param  {...any} args - Additional arguments to be passed (optional)\n */\nexport const curry = (f, arity = f.length, ...args) =>\n  arity <= args.length ? f(...args) : (...argz) => curry(f, arity, ...args, ...argz)\n\n/**\n * Function composition!\n *\n * @param  {...any} fns - Comma-separated list of functions to be composed (right -> left)\n */\nexport const compose = (...fns) => (args) => fns.reduceRight((x, f) => f(x), args)\n\n// get : s -> {s: a} -> Maybe a\nexport const get = curry((key, obj) => obj[key])\n\n// set : String -> a -> {k: v} -> {k: v}\nexport const set = curry((key, val, obj) => (obj[key] ? { ...obj, [key]: val } : obj))\n\n// setIndex : Index -> a -> [a] -> [a]\nexport const setIndex = curry((index, val, array) => array.map((v, i) => (i == index ? val : v)))\n\n// toUpper : String -> String\nexport const toUpper = (str) => str.toUpperCase()\n","import { curry } from './functions'\n\nclass Fold {\n  constructor(reduce, toArray) {\n    if (!reduce) this.reduce = (f, i, obj) => toArray(obj).reduce(f, i)\n    else this.reduce = reduce\n\n    if (!toArray) this.toArray = (obj) => reduce((acc, cur) => acc.concat(cur), [], obj)\n    else this.toArray = toArray\n  }\n\n  // itself\n  get asFold() {\n    return this\n  }\n}\n\n// fold : ((b -> a -> b) -> b -> s -> b) → Fold s a\nexport const foldFromReduce = curry((reduce) => new Fold(reduce, null))\n// fold : (s -> [a]) -> Fold s a\nexport const foldFromToArray = curry((toArray) => new Fold(null, toArray))\n// fold : ((b -> a -> b) -> b -> s -> b) -> (s -> [a]) -> Fold s a\nexport const fold = curry((reduce, toArray) => new Fold(reduce, toArray))\n","/**\n * The special value for 'not found'\n */\nexport const notFound = Symbol('notFound')\n\nexport const isNotFound = (x) => x === notFound\n\nexport const notFoundToList = (v) => (isNotFound(v) ? [] : [v])\n","import { fold } from './Fold'\nimport { curry } from './functions'\nimport { notFoundToList } from './notFound'\n\n/**\n * AKA: Affine Fold\n */\nclass PartialGetter {\n  constructor(preview) {\n    this.preview = preview\n\n    // derived operations\n    this.reduce = (f, i, obj) => notFoundToList(this.preview(obj)).reduce(f, i)\n    this.toArray = (obj) => notFoundToList(this.preview(obj))\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // itself\n  get asPartialGetter() {\n    return this\n  }\n}\n\n// partialGetter : (s → Maybe a) → AffineFold s a\nexport const partialGetter = curry((preview) => new PartialGetter(preview))\n","import { fold } from './Fold'\nimport { curry } from './functions'\nimport { partialGetter } from './PartialGetter'\n\nclass Getter {\n  constructor(get) {\n    this.get = get\n\n    // derived operations\n    this.reduce = (f, i, obj) => f(i, this.get(obj))\n    this.toArray = (obj) => [this.get(obj)]\n    this.preview = this.get\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // partial getter = preview\n  get asPartialGetter() {\n    return partialGetter(this.get)\n  }\n\n  // itself\n  get asGetter() {\n    return this\n  }\n}\n\n// getter : (s → a) → Getter s a\nexport const getter = curry((get) => new Getter(get))\n","import { curry } from './functions'\n\nclass Setter {\n  constructor(over) {\n    this.over = over\n\n    // derived operations\n    this.set = (val, x) => this.over(() => val, x)\n  }\n\n  // itself\n  get asSetter() {\n    return this\n  }\n}\n\n// setter : ((a → a, s) → s) → Setter s a\nexport const setter = curry((over) => new Setter(over))\n","import { fold } from './Fold'\nimport { curry } from './functions'\nimport { setter } from './Setter'\n\nclass Traversal {\n  constructor(reduce, toArray, over) {\n    if (!reduce) this.reduce = (f, i, obj) => toArray(obj).reduce(f, i)\n    else this.reduce = reduce\n\n    if (!toArray) this.toArray = (obj) => reduce((acc, cur) => acc.concat(cur), [], obj)\n    else this.toArray = toArray\n\n    this.over = over\n\n    // derived operations\n    this.set = (val, x) => this.over(() => val, x)\n  }\n\n  // setter = over + set\n  get asSetter() {\n    return setter(this.over)\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // itself\n  get asTraversal() {\n    return this\n  }\n}\n\n// traversal : ((b -> a -> b) -> b -> s -> b) → ((a -> a) -> s -> s) -> Traversal s a\nexport const traversalFromReduce = curry((reduce, over) => new Traversal(reduce, null, over))\n// traversal : (s -> [a]) -> ((a -> a) -> s -> s) -> Traversal s a\nexport const traversalFromToArray = curry((toArray, over) => new Traversal(null, toArray, over))\n// traversal : ((b -> a -> b) -> b -> s -> b) -> (s -> [a])\n//           -> ((a -> a) -> s -> s) -> Traversal s a\nexport const traversal = curry((reduce, toArray, over) => new Traversal(reduce, toArray, over))\n\n// values : Traversal [a] a\nexport const values = traversal(\n  (f, i, obj) => obj.reduce(f, i),\n  (obj) => [...obj],\n  (f, obj) => obj.map(f),\n)\n\n// entries : Traversal Object [K, V]\nexport const entries = traversalFromToArray(\n  (obj) => [...Object.entries(obj)],\n  (f, obj) => Object.fromEntries([...Object.entries(obj)].map(f)),\n)\n","import { OpticCreationError } from './errors'\nimport { fold } from './Fold'\nimport { curry, setIndex } from './functions'\nimport { isNotFound, notFound, notFoundToList } from './notFound'\nimport { partialGetter } from './PartialGetter'\nimport { setter } from './Setter'\nimport { traversal } from './Traversal'\n\n/**\n * AKA: Affine Traversal\n */\nclass Optional {\n  constructor(preview, set) {\n    this.preview = preview\n    this.set = set\n\n    // derived operations\n    this.over = (f, obj) => {\n      const v = this.preview(obj)\n      return isNotFound(v) ? obj : this.set(f(v), obj)\n    }\n    this.reduce = (f, i, obj) => notFoundToList(this.preview(obj)).reduce(f, i)\n    this.toArray = (obj) => notFoundToList(this.preview(obj))\n  }\n\n  // setter = over + set\n  get asSetter() {\n    return setter(this.over)\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // traversal = reduce + toArray + over\n  get asTraversal() {\n    return traversal(this.reduce, this.toArray, this.over)\n  }\n\n  // partial getter = preview\n  get asPartialGetter() {\n    return partialGetter(this.preview)\n  }\n\n  // itself\n  get asOptional() {\n    return this\n  }\n}\n\n// optional : (s → Maybe a) → ((a, s) → s) → Optional s a\nexport const optional = curry((preview, set) => new Optional(preview, set))\n\n// optionalProp : String → Optional s a\nexport const optionalProp = (key) =>\n  optional(\n    (obj) => obj[key] || notFound,\n    (val, obj) => (obj[key] ? { ...obj, [key]: val } : obj),\n  )\n\n// optionalIx : Number → Optional s a\nexport const optionalIx = (index) =>\n  optional(\n    (obj) => obj[index] || notFound,\n    (val, obj) => (obj[index] ? setIndex(index, val, obj) : obj),\n  )\n\n// maybe : (String | Int | Lens s a) -> Optional s a\nexport const maybe = (optic) => {\n  if (typeof optic == 'string' || optic instanceof String) {\n    return optionalProp(optic)\n  }\n  if (typeof optic == 'number' && !isNaN(optic)) {\n    return optionalIx(optic)\n  }\n  if (optic.asLens) {\n    const l = optic.asLens\n    return optional(l.get, l.set)\n  }\n  throw new OpticCreationError('Optional', typeof optic + ' cannot be turned into optional')\n}\n","import { fold } from './Fold'\nimport { curry, get, set, setIndex } from './functions'\nimport { getter } from './Getter'\nimport { isNotFound, notFound } from './notFound'\nimport { optional } from './Optional'\nimport { partialGetter } from './PartialGetter'\nimport { setter } from './Setter'\nimport { traversal } from './Traversal'\n\nclass Lens {\n  constructor(get, set) {\n    this.get = get\n    this.set = set\n\n    // derived operations\n    this.over = (f, obj) => this.set(f(this.get(obj)), obj)\n    this.reduce = (f, i, obj) => f(i, this.get(obj))\n    this.toArray = (obj) => [this.get(obj)]\n    this.preview = this.get\n  }\n\n  // setter = over + set\n  get asSetter() {\n    return setter(this.over)\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // traversal = reduce + toArray + over\n  get asTraversal() {\n    return traversal(this.reduce, this.toArray, this.over)\n  }\n\n  // optional = preview + set\n  get asOptional() {\n    return optional(this.get, this.set)\n  }\n\n  // getter = get\n  get asGetter() {\n    return getter(this.get)\n  }\n\n  // partial getter = preview\n  get asPartialGetter() {\n    return partialGetter(this.get)\n  }\n\n  // itself\n  get asLens() {\n    return this\n  }\n}\n\n// lens : (s → a) → ((a, s) → s) → Lens s a\nexport const lens = curry((get, set) => new Lens(get, set))\n\n// ix : Number → Lens s a\nexport const ix = (index) => lens(get(index), setIndex(index))\n\n// mustBePresent : String → Lens s a\nexport const mustBePresent = (key) => lens(get(key), set(key))\n\n// alter : String → Lens (Maybe s) (Maybe a)\nexport const alter = (key) =>\n  lens(\n    (obj) => (isNotFound(obj) ? notFound : obj[key] || notFound),\n    (val, obj) => {\n      if (isNotFound(val)) {\n        // eslint-disable-next-line no-unused-vars\n        const { [key]: _, ...newObj } = obj\n        return newObj\n      } else {\n        return { ...obj, [key]: val }\n      }\n    },\n  )\n","import { curry } from './functions'\n\nclass Reviewer {\n  constructor(review) {\n    this.review = review\n  }\n\n  // itself\n  get asReviewer() {\n    return this\n  }\n}\n\n// reviewer : (a → s) → Prism s a\nexport const reviewer = curry((review) => new Reviewer(review))\n","import { fold } from './Fold'\nimport { curry } from './functions'\nimport { isNotFound, notFound, notFoundToList } from './notFound'\nimport { optional } from './Optional'\nimport { partialGetter } from './PartialGetter'\nimport { reviewer } from './Reviewer'\nimport { setter } from './Setter'\nimport { traversal } from './Traversal'\n\nclass Prism {\n  constructor(preview, set, review) {\n    this.preview = preview\n    this.set = set\n    this.review = review\n\n    // derived operations\n    this.over = (f, obj) => {\n      const v = this.preview(obj)\n      return isNotFound(v) ? obj : this.set(f(v), obj)\n    }\n    this.reduce = (f, i, obj) => notFoundToList(this.preview(obj)).reduce(f, i)\n    this.toArray = (obj) => notFoundToList(this.preview(obj))\n  }\n\n  // setter = over + set\n  get asSetter() {\n    return setter(this.over)\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // traversal = reduce + toArray + over\n  get asTraversal() {\n    return traversal(this.reduce, this.toArray, this.over)\n  }\n\n  // partial getter = preview\n  get asPartialGetter() {\n    return partialGetter(this.preview)\n  }\n\n  // optional = preview + set\n  get asOptional() {\n    return optional(this.preview, this.set)\n  }\n\n  // reviewer = review\n  get asReviewer() {\n    return reviewer(this.review)\n  }\n\n  // itself\n  get asPrism() {\n    return this\n  }\n}\n\n// prism : (s → Maybe a) → ((a, s) → s) → (a → s) → Prism s a\nexport const prism = curry((preview, set, review) => new Prism(preview, set, review))\n\nconst checkPresence = (mustBePresent, obj) =>\n  Object.keys(mustBePresent).every((k) => obj && obj[k] && obj[k] === mustBePresent[k])\n\n/**\n * Check that a subset of properties with their values are present.\n * Useful for working with Redux actions, or variants in general.\n *\n * @param {object} mustBePresent\n */\nexport const has = (mustBePresent) =>\n  prism(\n    (obj) => (checkPresence(mustBePresent, obj) ? { ...obj } : notFound),\n    (newObj, obj) =>\n      checkPresence(mustBePresent, obj) ? { ...newObj, ...mustBePresent } : { ...obj },\n    (newObj) => ({ ...newObj, ...mustBePresent }),\n  )\n","import { fold } from './Fold'\nimport { curry } from './functions'\nimport { getter } from './Getter'\nimport { lens } from './Lens'\nimport { optional } from './Optional'\nimport { partialGetter } from './PartialGetter'\nimport { prism } from './Prism'\nimport { reviewer } from './Reviewer'\nimport { setter } from './Setter'\nimport { traversal } from './Traversal'\n\nclass Iso {\n  constructor(get, review) {\n    this.get = get\n    this.review = review\n\n    // derived operations\n    this.set = (x) => this.review(x)\n    this.over = (f, obj) => this.review(f(this.get(obj)))\n    this.reduce = (f, i, obj) => f(i, this.get(obj))\n    this.toArray = (obj) => [this.get(obj)]\n    this.preview = this.get\n  }\n\n  // setter = over + set\n  get asSetter() {\n    return setter(this.over)\n  }\n\n  // fold = reduce + toArray\n  get asFold() {\n    return fold(this.reduce, this.toArray)\n  }\n\n  // traversal = reduce + toArray + over\n  get asTraversal() {\n    return traversal(this.reduce, this.toArray, this.over)\n  }\n\n  // optional = preview + set\n  get asOptional() {\n    return optional(this.get, this.set)\n  }\n\n  // prism = preview + set + review\n  get asPrism() {\n    return prism(this.get, this.set, this.review)\n  }\n\n  // reviewer = review\n  get asReviewer() {\n    return reviewer(this.review)\n  }\n\n  // getter = get\n  get asGetter() {\n    return getter(this.get)\n  }\n\n  // partial getter = preview\n  get asPartialGetter() {\n    return partialGetter(this.get)\n  }\n\n  // lens\n  get asLens() {\n    return lens(this.get, this.set)\n  }\n\n  // itself\n  get asIso() {\n    return this\n  }\n}\n\n// iso : (s → a) → (a → s) → Iso s a\nexport const iso = curry((get, review) => new Iso(get, review))\n\n// singleton : Key -> Iso { k: a } a\nexport const single = (key) =>\n  iso(\n    (obj) => obj[key],\n    (val) => ({ [key]: val }),\n  )\n","import { OpticComposeError, UnavailableOpticOperationError } from './errors'\nimport { fold } from './Fold'\nimport { curry } from './functions'\nimport { getter } from './Getter'\nimport { alter, ix, lens } from './Lens'\nimport { isNotFound, notFound } from './notFound'\nimport { optional } from './Optional'\nimport { partialGetter } from './PartialGetter'\nimport { prism } from './Prism'\nimport { reviewer } from './Reviewer'\nimport { setter } from './Setter'\nimport { traversal } from './Traversal'\n\n// combine two previews\nconst combinePreviews = (p1, p2) => (x) => {\n  const v = p1(x)\n  return isNotFound(v) ? notFound : p2(v)\n}\n\n// r1 comes from Fold a b => ((r -> b -> r) -> r -> a -> r)\n// r2 comes from Fold b c => ((r -> c -> r) -> r -> b -> r)\n// and we want to get Fold a c => ((r -> c -> r) -> r -> a -> r)\nconst combineReduces = (r1, r2) => (f, i, obj) => r2((acc, cur) => r1(f, acc, cur), i, obj)\n\n/**\n * Compose two optics\n *\n * @param {*} optic1\n * @param {*} optic2\n */\nconst compose2Optics = (optic1, optic2) => {\n  // start from most specific (iso) to less specific (fold, setter, reviewer)\n  if (optic1.asLens && optic2.asLens) {\n    const o1 = optic1.asLens\n    const o2 = optic2.asLens\n    return lens(\n      (x) => o2.get(o1.get(x)),\n      (v, x) => o1.over((inner) => o2.set(v, inner), x),\n    )\n  } else if (optic1.asPrism && optic2.asPrism) {\n    const o1 = optic1.asPrism\n    const o2 = optic2.asPrism\n    return prism(\n      combinePreviews(o1.preview, o2.preview),\n      (v, x) => o1.over((inner) => o2.set(v, inner), x),\n      (x) => o2.review(o1.review(x)),\n    )\n  } else if (optic1.asOptional && optic2.asOptional) {\n    const o1 = optic1.asOptional\n    const o2 = optic2.asOptional\n    return optional(combinePreviews(o1.preview, o2.preview), (v, x) =>\n      o1.over((inner) => o2.set(v, inner), x),\n    )\n  } else if (optic1.asTraversal && optic2.asTraversal) {\n    const o1 = optic1.asTraversal\n    const o2 = optic2.asTraversal\n    return traversal(\n      combineReduces(o1.reduce, o2.reduce),\n      (obj) => o1.toArray(obj).flatMap((x) => o2.toArray(x)),\n      (f, x) => o1.over((inner) => o2.over(f, inner), x),\n    )\n  } else if (optic1.asGetter && optic2.asGetter) {\n    const o1 = optic1.asGetter\n    const o2 = optic2.asGetter\n    return getter((x) => o2.get(o1.get(x)))\n  } else if (optic1.asPartialGetter && optic2.asPartialGetter) {\n    const o1 = optic1.asPartialGetter\n    const o2 = optic2.asPartialGetter\n    return partialGetter(combinePreviews(o1.preview, o2.preview))\n  } else if (optic1.asFold && optic2.asFold) {\n    const o1 = optic1.asFold\n    const o2 = optic2.asFold\n    return fold(combineReduces(o1.reduce, o2.reduce), (obj) =>\n      o1.toArray(obj).flatMap((x) => o2.toArray(x)),\n    )\n  } else if (optic1.asSetter && optic2.asSetter) {\n    const o1 = optic1.asSetter\n    const o2 = optic2.asSetter\n    return setter((f, x) => o1.over((inner) => o2.over(f, inner), x))\n  } else if (optic1.asReviewer && optic2.asReviewer) {\n    const o1 = optic1.asReviewer\n    const o2 = optic2.asReviewer\n    return reviewer((x) => o2.review(o1.review(x)))\n  }\n\n  throw new OpticComposeError(\n    optic1.constructor.name,\n    optic2.constructor.name,\n    'incompatible optics',\n  )\n}\n\nconst toOptic = (optic) => {\n  if (typeof optic == 'string' || optic instanceof String) {\n    return alter(optic)\n  }\n  if (typeof optic == 'number' && !isNaN(optic)) {\n    return ix(optic)\n  }\n  // any other case means it was already an optic\n  return optic\n}\n\n/**\n * Create a new optic by composition.\n *\n * You can use a string or integer to directly create a lens,\n * or wrap it with 'maybe' to create an optional\n *\n * @param  {...any} optics - Comma-separated or array of optics to be composed\n *\n * flatten the arguments to account for composeOptics(['this', 'that'])\n */\nexport const composeOptics = (...optics) => optics.flat().map(toOptic).reduce(compose2Optics)\nexport const optic = composeOptics\nexport const path = composeOptics\n\n// reduce : Fold s a → (r -> a -> r) -> r -> s -> r\nexport const reduce = curry((optic, f, i, obj) => {\n  if (optic.asFold) {\n    return optic.asFold.reduce(f, i, obj)\n  } else {\n    throw new UnavailableOpticOperationError(\n      'reduce',\n      optic.constructor.name,\n      'reduce is not supported by ' + optic.constructor.name,\n    )\n  }\n})\n\n// toArray : Fold s a → s → [a]\nexport const toArray = curry((optic, obj) => {\n  if (optic.asFold) {\n    return optic.asFold.toArray(obj)\n  } else {\n    throw new UnavailableOpticOperationError(\n      'toArray',\n      optic.constructor.name,\n      `toArray is not supported by ${optic.constructor.name}`,\n    )\n  }\n})\n\n// preview : Optional s a → s → Maybe a\nexport const preview = curry((optic, obj) => {\n  if (optic.asPartialGetter) {\n    return optic.asPartialGetter.preview(obj)\n  } else {\n    throw new UnavailableOpticOperationError(\n      'preview',\n      optic.constructor.name,\n      `preview is not supported by ${optic.constructor.name}`,\n    )\n  }\n})\n\n// view : Getter s a → s → a\nexport const view = curry((optic, obj) => {\n  if (optic.asGetter) {\n    return optic.asGetter.get(obj)\n  } else {\n    throw new UnavailableOpticOperationError(\n      'view/get',\n      optic.constructor.name,\n      'view/get is not supported by ' + optic.constructor.name,\n    )\n  }\n})\n\n// set : Setter s a → a → s → s\nexport const set = curry((optic, val, obj) => {\n  if (optic.asSetter) {\n    return optic.asSetter.set(val, obj)\n  } else {\n    throw new UnavailableOpticOperationError(\n      'set',\n      optic.constructor.name,\n      'set is not supported by ' + optic.constructor.name,\n    )\n  }\n})\n\n// over : Setter s a → (a → a) → s → s\nexport const over = curry((optic, f, obj) => {\n  if (optic.asSetter) {\n    return optic.asSetter.over(f, obj)\n  } else {\n    throw new UnavailableOpticOperationError(\n      'over',\n      optic.constructor.name,\n      'over is not supported by ' + optic.constructor.name,\n    )\n  }\n})\n\n// review : Reviewer s a → a → s\nexport const review = curry((optic, obj) => {\n  if (optic.asReviewer) return optic.asReviewer.review(obj)\n  else\n    throw new UnavailableOpticOperationError(\n      'review',\n      optic.constructor.name,\n      'review is not supported by ' + optic.constructor.name,\n    )\n})\n"],"names":["OpticCreationError","optic","_this","Error","captureStackTrace","OpticComposeError","name","optic1","optic2","_this2","UnavailableOpticOperationError","operation","_this3","curry","f","arity","length","args","compose","reduceRight","x","get","key","obj","set","val","setIndex","index","array","map","v","i","toUpper","str","toUpperCase","Fold","reduce","toArray","acc","cur","concat","foldFromReduce","foldFromToArray","fold","notFound","Symbol","isNotFound","notFoundToList","PartialGetter","preview","this","partialGetter","Getter","getter","Setter","over","setter","Traversal","traversalFromReduce","traversalFromToArray","traversal","values","entries","Object","fromEntries","Optional","optional","optionalProp","optionalIx","maybe","String","isNaN","asLens","l","Lens","lens","ix","mustBePresent","alter","_","Reviewer","review","reviewer","Prism","prism","checkPresence","keys","every","k","has","newObj","Iso","iso","single","combinePreviews","p1","p2","combineReduces","r1","r2","compose2Optics","o1","o2","inner","asPrism","asOptional","asTraversal","flatMap","asGetter","asPartialGetter","asFold","asSetter","asReviewer","constructor","toOptic","composeOptics","flat","path","view"],"mappings":"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"}